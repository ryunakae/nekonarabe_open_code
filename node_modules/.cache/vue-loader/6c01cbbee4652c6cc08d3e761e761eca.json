{"remainingRequest":"/Users/ryunakae/Documents/work/nekonarabe-app/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/ryunakae/Documents/work/nekonarabe-app/src/views/Table.vue?vue&type=style&index=0&id=462129f8&scoped=true&lang=css&","dependencies":[{"path":"/Users/ryunakae/Documents/work/nekonarabe-app/src/views/Table.vue","mtime":1610973412477},{"path":"/Users/ryunakae/Documents/work/nekonarabe-app/node_modules/css-loader/dist/cjs.js","mtime":1607516874183},{"path":"/Users/ryunakae/Documents/work/nekonarabe-app/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1608337348533},{"path":"/Users/ryunakae/Documents/work/nekonarabe-app/node_modules/postcss-loader/src/index.js","mtime":1607516875456},{"path":"/Users/ryunakae/Documents/work/nekonarabe-app/node_modules/cache-loader/dist/cjs.js","mtime":1607516839505},{"path":"/Users/ryunakae/Documents/work/nekonarabe-app/node_modules/vue-loader/lib/index.js","mtime":1608337348533}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgouZmxleCB7CiAgZGlzcGxheTogZmxleDsKICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWFyb3VuZDsKICBmbGV4LXdyYXA6IHdyYXA7Cn0K"},{"version":3,"sources":["Table.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkDA;AACA;AACA;AACA;AACA","file":"Table.vue","sourceRoot":"src/views","sourcesContent":["<template>\n  <div class=\"table\">\n    <Deck />\n    <div class=\"flex\">\n    <Hand v-for=\"(data, index) in cards\" :key=\"index\" :card=\"data\" />\n    </div>\n    <div>{{ id }}</div>\n    <button @click=\"consoleLog()\">console</button>\n  </div>\n</template>\n\n<script>\nimport Hand from \"../components/Hand\";\nimport Deck from \"../components/Deck\";\nimport {db} from '../plugins/firebase';\n\nexport default {\n  Name: 'Table',\n  props: [\"id\"],\n  data() {\n    return {\n      cards: [],\n      // id: \"\",\n    };\n  },\n  firestore() {\n    return {\n      cards: db.collection('cards').where(\"belong_to\", \"==\", 1)\n    }\n  },\n  // computed: {\n  //   cardsInHand() {\n  //     const playerId = 1;\n  //     let cardsBelongTo = [];\n  //     return this.cards;\n  //   }\n  // },\n  methods: {\n    consoleLog() {\n      console.log(this.cards)\n    }\n  },\n  components: {\n    Hand,\n    Deck\n  },\n};\n</script>\n\n<style scoped>\n.flex {\n  display: flex;\n  justify-content: space-around;\n  flex-wrap: wrap;\n}\n</style>"]}]}